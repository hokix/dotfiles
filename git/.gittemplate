feat: 

# ------------------------------------------------------------
# 🧩 Commit message 格式规范（Conventional Commits 风格）
#
# 格式: type(scope): subject
#
# 示例:
# feat(auth): 支持用户登录注册功能
# fix(ui): 修复设置页面保存按钮无效问题
#
# ------------------------------------------------------------
# ✳️ 字段说明：
#
# type：commit 类型，只允许以下标识：
#
#   feat：     新功能（feature）
#   fix：      修补 bug
#   docs：     文档（documentation）
#   style：    代码格式（不影响功能的改动，如空格、分号等）
#   refactor： 代码重构（既不是新增功能，也不是修 bug）
#   test：     测试相关（增加或修改测试用例）
#   chore：    构建过程或辅助工具的变动（无业务逻辑修改）
#   perf：     性能优化（提高执行效率）
#   build：    构建系统或依赖项变更（如 npm、gradle、webpack）
#   ci：       CI/CD 配置或脚本变动（如 GitHub Actions、Jenkins）
#   revert：   回滚之前的提交
#
# scope：可选，表示影响的范围（如模块或组件名）
# subject：简要描述本次提交的目的（50 字以内）
#
# ------------------------------------------------------------
# 🧠 建议：
# - 如果提交内容涉及多个变更点，请分条列出
# - 可在下方详细描述修改的背景、动机和影响
#
# ------------------------------------------------------------
# 示例（完整格式）：
#
# feat(api): 新增用户登录接口
#
# - 添加 /auth/login 接口，支持 JWT 登录验证
# - 增加对应单元测试
# - 更新接口文档
#
# BREAKING CHANGE: 删除旧版 /login 接口
# Fixes: #42
# ------------------------------------------------------------

# [可选 body]
# 说明修改的背景、动机、实现细节或影响。
#
# [可选 footer]
# 例如：
# BREAKING CHANGE: <描述不兼容的变更>
# Fixes: #<issue编号>
# Reviewed-by: <审阅人>
